{"version":3,"sources":["hooks/useForm.jsx","utils/validations.js","components/Error.jsx","utils/errorsChecker.js","components/Register.jsx","App.jsx","index.js"],"names":["useForm","initialValues","useState","values","setValues","errors","setErrors","handleChange","e","target","name","value","split","some","chr","isNaN","email","test","phone","validate","onSubmit","preventDefault","console","log","Error","error","className","errorsChecker","obj","Object","keys","LANGUAGE_ITEMES","Register","language","setLanguage","visibleDropdown","setVisibleDropdown","accessConditions","setAccessConditions","href","htmlFor","onChange","placeholder","type","id","onClick","map","i","languageHandle","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAsBeA,EAnBC,SAACC,GAAmB,IAAD,EACHC,mBAASD,GADN,mBACxBE,EADwB,KAChBC,EADgB,OAEHF,mBAASD,GAFN,mBAExBI,EAFwB,KAEhBC,EAFgB,KAgB/B,MAAO,CAAEC,aAXY,SAACC,GAAO,IAAD,EACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACdL,EAAU,2BAAKD,GCVC,SAACM,EAAOD,GAC5B,IAAIL,EAAS,GACb,OAAQK,GACJ,IAAK,OACD,IAAKC,EAAO,CACRN,EAAOK,KAAO,2JACd,MAEAC,EAAMC,MAAM,IAAIC,MAAK,SAAAC,GAAG,MAAY,MAARA,IAAgBC,MAAMD,MAClDT,EAAOK,KAAO,qLAGdL,EAAOK,KAAO,GAElB,MAEJ,IAAK,QACD,IAAKC,EAAO,CACRN,EAAOW,MAAQ,2JACf,MAEC,wJAAwJC,KAAKN,GAI9JN,EAAOW,MAAQ,GAHfX,EAAOW,MAAQ,uKAKnB,MAEJ,IAAK,QACD,IAAKL,EAAO,CACRN,EAAOa,MAAQ,2JACf,MAEAP,EAAMC,MAAM,IAAIC,MAAK,SAAAC,GAAG,OAAIC,MAAMD,MAClCT,EAAOa,MAAQ,2JAGfb,EAAOa,MAAQ,GAQ3B,OAAOb,EDpCuBc,CAASR,EAAOD,KAC1CN,EAAU,2BAAKD,GAAN,kBAAeO,EAAOC,MAQZS,SALN,SAACZ,GACdA,EAAEa,iBACFC,QAAQC,IAAI,yBAGiBpB,SAAQE,WET9BmB,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACb,OACI,qBAAKC,UAAU,QAAf,SACKD,KCLAE,EAAgB,SAACC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKf,MAAK,SAAAF,GAAK,OAAIiB,EAAIjB,OCQxCoB,EAAkB,CAAC,6CAAW,yDAAa,+DAAc,yDAAa,0DAGtE9B,EAAgB,CAAES,KAAM,GAAIM,MAAO,GAAIE,MAAO,IAsErCc,EApEE,WAAO,IAAD,EACa9B,mBAAS,4BADtB,mBACZ+B,EADY,KACFC,EADE,OAE2BhC,oBAAS,GAFpC,mBAEZiC,EAFY,KAEKC,EAFL,OAG6BlC,oBAAS,GAHtC,mBAGZmC,EAHY,KAGMC,EAHN,OAIgCtC,EAAQC,GAAnDM,EAJW,EAIXA,aAAca,EAJH,EAIGA,SAAUjB,EAJb,EAIaA,OAAQE,EAJrB,EAIqBA,OAkBxC,OACI,qBAAKqB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,yBAAd,gFACA,oBAAGA,UAAU,yBAAb,qGAAwD,mBAAGa,KAAK,IAAR,kDAE5D,uBAAMnB,SAAUA,EAAUM,UAAU,OAApC,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAOc,QAAQ,OAAf,gCACA,uBAAO7B,MAAOR,EAAOO,KAAM+B,SAAUlC,EAAcmC,YAAY,yFAAmBC,KAAK,OAAOjC,KAAK,OAAOkC,GAAG,SAC5GvC,EAAOK,MAAQ,cAAC,EAAD,CAAOe,MAAOpB,EAAOK,UAEzC,sBAAKgB,UAAU,cAAf,UACI,uBAAOc,QAAQ,QAAf,mBACA,uBAAO7B,MAAOR,EAAOa,MAAOyB,SAAUlC,EAAcmC,YAAY,sEAAoBC,KAAK,OAAOjC,KAAK,QAAQkC,GAAG,UAC/GvC,EAAOW,OAAS,cAAC,EAAD,CAAOS,MAAOpB,EAAOW,WAE1C,sBAAKU,UAAU,cAAf,UACI,uBAAOc,QAAQ,QAAf,6FACA,uBAAO7B,MAAOR,EAAOe,MAAOuB,SAAUlC,EAAcmC,YAAY,6HAAyBC,KAAK,QAAQjC,KAAK,QAAQkC,GAAG,UACrHvC,EAAOa,OAAS,cAAC,EAAD,CAAOO,MAAOpB,EAAOa,WAE1C,sBAAKQ,UAAU,eAAf,UACI,uBAAOc,QAAQ,WAAf,sCACA,uBAAOK,QAvCJ,WACnBT,GAAoBD,IAsC4BQ,KAAK,SAAShC,MAAOsB,EAAUvB,KAAK,WAAWkC,GAAG,aAEjFT,GAAmB,qBAAKT,UAAU,wBAAf,SAChB,6BACKK,GAAmBA,EAAgBe,KAAI,SAACb,EAAUc,GAAX,OAAiB,oBAA4BF,QAAS,YAvCnG,SAACZ,GACpBC,EAAYD,GACZG,GAAmB,GAqC2GY,CAAef,IAA5D,SAA0EA,GAA1E,UAAYA,GAAZ,OAAuBc,cAM5F,sBAAKrB,UAAU,iBAAf,UACI,uBAAOe,SAzCI,WAC3BH,GAAqBD,IAwCoCM,KAAK,WAAWC,GAAG,aAC5D,wBAAOJ,QAAQ,WAAf,8DAAmC,mBAAGD,KAAK,IAAR,wDAAnC,wFAEJ,uBAAOb,UAAS,kBAAaW,GAAoBV,EAActB,IAAWF,IAAWF,EAAgB,kBAAoB,kBAAoBgD,WAAWZ,IAAoBV,EAActB,IAAWF,IAAWF,GAA8B0C,KAAK,SAAShC,MAAM,0HCjEvQuC,MARf,WACE,OACE,qBAAKxB,UAAU,UAAf,SACE,cAAC,EAAD,OCDNyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d093b90f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { validate } from '../utils/validations';\r\n\r\nconst useForm = (initialValues) => {\r\n    const [values, setValues] = useState(initialValues)\r\n    const [errors, setErrors] = useState(initialValues);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setErrors({ ...errors, ...validate(value, name) })\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log('registration succeed')\r\n    }\r\n\r\n    return { handleChange, onSubmit, values, errors }\r\n}\r\n\r\nexport default useForm\r\n","export const validate = (value, name) => {\r\n    let errors = {};\r\n    switch (name) {\r\n        case 'name': {\r\n            if (!value) {\r\n                errors.name = 'Заполните обязательное поле'\r\n                break\r\n            }\r\n            if (value.split('').some(chr => chr !== ' ' && !isNaN(chr))) {\r\n                errors.name = 'Нельзя использовать цифры в имени'\r\n            }\r\n            else {\r\n                errors.name = ''\r\n            }\r\n            break;\r\n        }\r\n        case 'email': {\r\n            if (!value) {\r\n                errors.email = 'Заполните обязательное поле'\r\n                break\r\n            }\r\n            if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(value)) {\r\n                errors.email = 'Введено некорректное значение'\r\n            }\r\n            else {\r\n                errors.email = ''\r\n            }\r\n            break\r\n        }\r\n        case 'phone': {\r\n            if (!value) {\r\n                errors.phone = 'Заполните обязательное поле'\r\n                break\r\n            }\r\n            if (value.split('').some(chr => isNaN(chr))) {\r\n                errors.phone = 'Введен некорректный телефон'\r\n            }\r\n            else {\r\n                errors.phone = ''\r\n            }\r\n            break\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return errors\r\n}","import React from 'react'\r\n\r\nconst Error = ({ error }) => {\r\n    return (\r\n        <div className='error'>\r\n            {error}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","export const errorsChecker = (obj) => {\r\n    return Object.keys(obj).some(value => obj[value])\r\n}","import React, { useState } from 'react';\r\nimport useForm from '../hooks/useForm';\r\nimport Error from './Error';\r\nimport { errorsChecker } from '../utils/errorsChecker';\r\n\r\n\r\n\r\n\r\n\r\nconst LANGUAGE_ITEMES = ['Русский', 'Китайский', 'Английский', 'Китайский', 'Испанский'];\r\n\r\n\r\nconst initialValues = { name: '', email: '', phone: '' }\r\n\r\nconst Register = () => {\r\n    const [language, setLanguage] = useState('Язык');\r\n    const [visibleDropdown, setVisibleDropdown] = useState(false);\r\n    const [accessConditions, setAccessConditions] = useState(false);\r\n    const { handleChange, onSubmit, values, errors } = useForm(initialValues);\r\n\r\n\r\n\r\n    const toggleDropdown = () => {\r\n        setVisibleDropdown(!visibleDropdown)\r\n    }\r\n\r\n    const languageHandle = (language) => {\r\n        setLanguage(language)\r\n        setVisibleDropdown(false);\r\n    }\r\n\r\n    const toggleAccessConditions = () => {\r\n        setAccessConditions(!accessConditions)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='register'>\r\n            <div className='container'>\r\n                <div className=\"register__header\">\r\n                    <h1 className='register__header-title'>Регистрация</h1>\r\n                    <p className='register__header-login'>Уже есть аккаунт? <a href=\"#\">Войти</a></p>\r\n                </div>\r\n                <form onSubmit={onSubmit} className='form'>\r\n                    <div className='form__name'>\r\n                        <label htmlFor=\"name\">Имя</label>\r\n                        <input value={values.name} onChange={handleChange} placeholder='Введите Ваше имя' type=\"text\" name=\"name\" id=\"name\" />\r\n                        {errors.name && <Error error={errors.name} />}\r\n                    </div>\r\n                    <div className='form__email'>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input value={values.email} onChange={handleChange} placeholder='Введите ваш email' type=\"text\" name=\"email\" id=\"email\" />\r\n                        {errors.email && <Error error={errors.email} />}\r\n                    </div>\r\n                    <div className='form__phone'>\r\n                        <label htmlFor=\"phone\">Номер телефона</label>\r\n                        <input value={values.phone} onChange={handleChange} placeholder='Введите номер телефона' type=\"phone\" name=\"phone\" id=\"phone\" />\r\n                        {errors.phone && <Error error={errors.phone} />}\r\n                    </div>\r\n                    <div className='form__select'>\r\n                        <label htmlFor=\"language\">Язык</label>\r\n                        <input onClick={toggleDropdown} type=\"button\" value={language} name=\"language\" id=\"language\" />\r\n\r\n                        {visibleDropdown && <div className='form__select-dropdown'>\r\n                            <ul>\r\n                                {LANGUAGE_ITEMES && LANGUAGE_ITEMES.map((language, i) => <li key={`${language}${i}`} onClick={() => { languageHandle(language) }}>{language}</li>)}\r\n                            </ul>\r\n                        </div>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className='form__checkbox'>\r\n                        <input onChange={toggleAccessConditions} type=\"checkbox\" id='checkbox' />\r\n                        <label htmlFor=\"checkbox\">Принимаю <a href=\"#\">условия</a> использования</label>\r\n                    </div>\r\n                    <input className={`button ${!accessConditions || errorsChecker(errors) || values === initialValues ? 'button-disabled' : 'button-allowed'}`} disabled={!accessConditions || errorsChecker(errors) || values === initialValues ? true : false} type=\"submit\" value='Зарегистрироваться' />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import './scss/app.scss';\nimport Register from './components/Register';\nfunction App() {\n  return (\n    <div className='content'>\n      <Register />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}